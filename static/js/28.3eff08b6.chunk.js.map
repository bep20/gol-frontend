{"version":3,"sources":["views/Teams/components/ComingSoon.tsx","views/Teams/components/TeamCard.tsx","views/Teams/Team.tsx","state/teams/hooks.ts","views/Teams/components/IconStatBox.tsx","views/Teams/components/NoProfileCard.tsx","views/Teams/components/TeamHeader.tsx"],"names":["ComingSoon","children","t","useTranslation","flexDirection","alignItems","justifyContent","p","width","height","as","scale","color","Wrapper","styled","div","theme","mediaQueries","md","Avatar","img","AvatarWrap","StyledCard","Card","StyledCardHeader","CardHeader","bg","TeamName","Heading","attrs","StatRow","TeamCard","team","background","src","images","alt","textColor","name","description","IconStatBox","icon","CommunityIcon","title","users","subtitle","PrizeIcon","isDisabled","Team","idStr","useParams","id","Number","isValidTeamId","teams","findIndex","useTeam","Page","TeamHeader","mb","to","PageLoader","useSelector","state","data","dispatch","useAppDispatch","useEffect","fetchTeam","useTeams","isInitialized","isLoading","fetchTeams","SecondaryCard","Text","colors","tertiary","defaultProps","Icon","props","mr","textTransform","fontSize","bold","NoProfileCard","isActive","Link","mt","HeaderWrapper","textSubtle","useProfile","profile","showProfileCallout"],"mappings":"oPAqBeA,EAb+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvCC,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,CAAME,cAAc,SAASC,WAAW,SAASC,eAAe,SAASC,EAAE,OAA3E,UACE,cAAC,IAAD,CAAsBC,MAAM,OAAOC,OAAO,SAC1C,cAAC,KAAD,CAASC,GAAG,KAAKC,MAAM,KAAKC,MAAM,eAAlC,SACGX,GAAYC,EAAE,sB,SCHjBW,EAAUC,IAAOC,IAAV,0FAGT,qBAAGC,MAAkBC,aAAaC,MAKhCC,EAASL,IAAOM,IAAV,qNAOR,qBAAGJ,MAAkBC,aAAaC,MAOhCG,EAAaP,IAAOC,IAAV,0EAKVO,EAAaR,YAAOS,IAAPT,CAAH,kDAIVU,EAAmBV,YAAOW,IAAPX,CAAH,kNAEF,qBAAGY,MAQjBC,EAAWb,YAAOc,MAASC,MAAM,CAAEnB,GAAI,MAA5BI,CAAH,sFAGV,qBAAGE,MAAkBC,aAAaC,MAKhCY,EAAUhB,IAAOC,IAAV,mOAMT,qBAAGC,MAAkBC,aAAaC,MAmCvBa,EA5B2B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnC9B,EAAMC,cAAND,EAER,OACE,cAACW,EAAD,UACE,eAACS,EAAD,WACE,eAACE,EAAD,CAAkBE,GAAE,wBAAmBM,EAAKC,YAA5C,UACE,cAACZ,EAAD,UACE,cAACF,EAAD,CAAQe,IAAG,wBAAmBF,EAAKG,OAAOjB,IAAMkB,IAAI,kBAEtD,cAACT,EAAD,CAAUf,MAAOoB,EAAKK,UAAtB,SAAkCL,EAAKM,OACvC,cAAC,KAAD,CAAM5B,GAAG,IAAIE,MAAOoB,EAAKK,UAAzB,SACGnC,EAAE8B,EAAKO,kBAGZ,eAAC,IAAD,WACE,eAACT,EAAD,WACE,cAACU,EAAA,EAAD,CAAaC,KAAMC,IAAeC,MAAOX,EAAKY,MAAOC,SAAU3C,EAAE,oBACjE,cAACsC,EAAA,EAAD,CAAaC,KAAMK,KAAWH,MAAOzC,EAAE,eAAgB2C,SAAU3C,EAAE,eAAgB6C,YAAU,OAE/F,cAAC,KAAD,CAASrC,GAAG,KAAZ,SAAkBR,EAAE,uBACpB,cAAC,EAAD,a,SCrDK8C,UA/BF,WACX,IAAYC,EAA0BC,cAA9BC,GACFA,EAAKC,OAAOH,GACV/C,EAAMC,cAAND,EACFmD,GAA+D,IAA/CC,IAAMC,WAAU,SAACvB,GAAD,OAAUA,EAAKmB,KAAOA,KACtDnB,EAAOwB,YAAQL,GAErB,OAAKE,EAIArB,EAKH,eAACyB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAAC,KAAD,CAAMC,GAAG,OAAT,SACE,cAAC,IAAD,CAAMC,GAAG,SAAT,SACE,eAAC,KAAD,CAAMvD,WAAW,SAAjB,UACE,cAAC,IAAD,CAAiBO,MAAM,YACvB,cAAC,KAAD,CAAMA,MAAM,UAAZ,SAAuBV,EAAE,2BAI/B,cAAC,EAAD,CAAU8B,KAAMA,OAdX,cAAC6B,EAAA,EAAD,IAJA,cAAC,IAAD,CAAUD,GAAG,W,iCCnBxB,wGAOaJ,EAAU,SAACL,GACtB,IAAMnB,EAAa8B,aAAY,SAACC,GAAD,OAAkBA,EAAMT,MAAMU,KAAKb,MAC5Dc,EAAWC,cAMjB,OAJAC,qBAAU,WACRF,EAASG,YAAUjB,MAClB,CAACA,EAAIc,IAEDjC,GAGIqC,EAAW,WACtB,MAAuDP,aAAY,SAACC,GAAD,OAAkBA,EAAMT,SAAnFgB,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,UAAWP,EAAlC,EAAkCA,KAC5BC,EAAWC,cAMjB,OAJAC,qBAAU,WACRF,EAASO,iBACR,CAACP,IAEG,CAAEX,MAAOU,EAAMM,gBAAeC,e,oICtBjCE,EAAgB3D,YAAO4D,KAAP5D,CAAH,8EACG,qBAAGE,MAAkB2D,OAAOC,YAIlDH,EAAcI,aAAe,CAC3BtE,EAAG,QA4BUiC,IAlBiC,SAAC,GAAmE,IAA3DsC,EAA0D,EAAhErC,KAAYE,EAAoD,EAApDA,MAAOE,EAA6C,EAA7CA,SAA6C,IAAnCE,kBAAmC,SAAZgC,EAAY,iBACjH,OACE,cAACN,EAAD,2BAAmBM,GAAnB,aACE,eAAC,KAAD,CAAM1E,WAAW,QAAjB,UACE,cAACyE,EAAD,CAAMtE,MAAM,OAAOwE,GAAG,OAAOpE,MAAOmC,EAAa,eAAiB,iBAClE,gCACE,cAAC,KAAD,CAASrC,GAAG,KAAKC,MAAM,KAAKC,MAAOmC,EAAa,eAAiB,OAAjE,SACGJ,IAEH,cAAC,KAAD,CAAMsC,cAAc,YAAYrE,MAAOmC,EAAa,eAAiB,aAAcmC,SAAS,OAAOC,MAAI,EAAvG,SACGtC,e,mGCCEuC,EA1BO,WACpB,IAAQlF,EAAMC,cAAND,EAER,OACE,cAAC,IAAD,CAAMyD,GAAG,OAAO0B,UAAQ,EAAxB,SACE,cAAC,IAAD,UACE,eAAC,KAAD,CACEhF,WAAY,CAAC,QAAS,KAAM,UAC5BC,eAAgB,CAAC,QAAS,KAAM,iBAChCF,cAAe,CAAC,SAAU,KAAM,OAHlC,UAKE,gCACE,cAAC,KAAD,CAASO,MAAM,KAAKgD,GAAG,MAAvB,SACGzD,EAAE,+CAEL,cAAC,KAAD,UAAOA,EAAE,oFAEX,cAAC,IAAD,CAAQQ,GAAI4E,IAAM1B,GAAG,kBAAkBT,GAAG,wBAAwBoC,GAAI,CAAC,OAAQ,KAAM,GAArF,SACGrF,EAAE,wBChBTsF,EAAgB1E,IAAOC,IAAV,8GACU,qBAAGC,MAAkB2D,OAAOc,cAyB1C/B,IApBI,WACjB,IAAQxD,EAAMC,cAAND,EACR,EAAmCwF,cAA3BpB,EAAR,EAAQA,cAAeqB,EAAvB,EAAuBA,QACjBC,EAAqBtB,IAAkBqB,EAE7C,OACE,qCACGC,GAAsB,cAAC,EAAD,IACvB,eAACJ,EAAD,WACE,cAAC,KAAD,CAAS9E,GAAG,KAAKC,MAAM,MAAMC,MAAM,YAAnC,SACGV,EAAE,sBAEL,cAAC,KAAD,CAAMiF,MAAI,EAAV,SACGjF,EAAE","file":"static/js/28.3eff08b6.chunk.js","sourcesContent":["import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n        {children || t('Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardHeader, CardBody, CommunityIcon, Heading, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { Team } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport ComingSoon from './ComingSoon'\nimport IconStatBox from './IconStatBox'\n\ninterface TeamCardProps {\n  team: Team\n}\n\nconst Wrapper = styled.div`\n  padding-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-top: 24px;\n  }\n`\n\nconst Avatar = styled.img`\n  border-radius: 50%;\n  height: 64px;\n  margin-top: -12px;\n  width: 64px;\n  border: solid 2px white;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 128px;\n    margin-top: -24px;\n    width: 128px;\n  }\n`\n\nconst AvatarWrap = styled.div`\n  margin-bottom: 8px;\n  text-align: center;\n`\n\nconst StyledCard = styled(Card)`\n  overflow: visible;\n`\n\nconst StyledCardHeader = styled(CardHeader)<{ bg: string }>`\n  position: relative;\n  background: url(${({ bg }) => bg});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  padding-top: 0;\n  text-align: center;\n`\n\nconst TeamName = styled(Heading).attrs({ as: 'h2' })`\n  font-size: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 40px;\n  }\n`\n\nconst StatRow = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-gap: 32px;\n    grid-template-columns: repeat(2, 1fr);\n    margin-bottom: 32px;\n  }\n`\n\nconst TeamCard: React.FC<TeamCardProps> = ({ team }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <StyledCard>\n        <StyledCardHeader bg={`/images/teams/${team.background}`}>\n          <AvatarWrap>\n            <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\n          </AvatarWrap>\n          <TeamName color={team.textColor}>{team.name}</TeamName>\n          <Text as=\"p\" color={team.textColor}>\n            {t(team.description)}\n          </Text>\n        </StyledCardHeader>\n        <CardBody>\n          <StatRow>\n            <IconStatBox icon={CommunityIcon} title={team.users} subtitle={t('Active Members')} />\n            <IconStatBox icon={PrizeIcon} title={t('Coming Soon')} subtitle={t('Team Points')} isDisabled />\n          </StatRow>\n          <Heading as=\"h3\">{t('Team Achievements')}</Heading>\n          <ComingSoon />\n        </CardBody>\n      </StyledCard>\n    </Wrapper>\n  )\n}\n\nexport default TeamCard\n","import React from 'react'\nimport Page from 'components/Layout/Page'\nimport { Link, Redirect, useParams } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text } from '@pancakeswap/uikit'\nimport PageLoader from 'components/Loader/PageLoader'\nimport teams from 'config/constants/teams'\nimport { useTranslation } from 'contexts/Localization'\nimport { useTeam } from 'state/teams/hooks'\nimport TeamCard from './components/TeamCard'\nimport TeamHeader from './components/TeamHeader'\n\nconst Team = () => {\n  const { id: idStr }: { id: string } = useParams()\n  const id = Number(idStr)\n  const { t } = useTranslation()\n  const isValidTeamId = teams.findIndex((team) => team.id === id) !== -1\n  const team = useTeam(id)\n\n  if (!isValidTeamId) {\n    return <Redirect to=\"/404\" />\n  }\n\n  if (!team) {\n    return <PageLoader />\n  }\n\n  return (\n    <Page>\n      <TeamHeader />\n      <Flex mb=\"24px\">\n        <Link to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\n          </Flex>\n        </Link>\n      </Flex>\n      <TeamCard team={team} />\n    </Page>\n  )\n}\n\nexport default Team\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport { State, TeamsState } from '../types'\nimport { fetchTeam, fetchTeams } from '.'\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\ninterface IconStatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst IconStatBox: React.FC<IconStatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default IconStatBox\n","import React from 'react'\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Link } from 'react-router-dom'\n\nconst NoProfileCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Card mb=\"32px\" isActive>\n      <CardBody>\n        <Flex\n          alignItems={['start', null, 'center']}\n          justifyContent={['start', null, 'space-between']}\n          flexDirection={['column', null, 'row']}\n        >\n          <div>\n            <Heading scale=\"lg\" mb=\"8px\">\n              {t('You haven’t set up your profile yet!')}\n            </Heading>\n            <Text>{t('You can do this at any time by clicking on your profile picture in the menu')}</Text>\n          </div>\n          <Button as={Link} to=\"/create-profile\" id=\"teamsPageSetUpProfile\" mt={['16px', null, 0]}>\n            {t('Set up now')}\n          </Button>\n        </Flex>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default NoProfileCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport NoProfileCard from './NoProfileCard'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst TeamHeader = () => {\n  const { t } = useTranslation()\n  const { isInitialized, profile } = useProfile()\n  const showProfileCallout = isInitialized && !profile\n\n  return (\n    <>\n      {showProfileCallout && <NoProfileCard />}\n      <HeaderWrapper>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\n          {t('Teams & Profiles')}\n        </Heading>\n        <Text bold>\n          {t('Show off your stats and collectibles with your unique profile. Team features will be revealed soon!')}\n        </Text>\n      </HeaderWrapper>\n    </>\n  )\n}\n\nexport default TeamHeader\n"],"sourceRoot":""}