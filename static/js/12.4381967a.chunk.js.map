{"version":3,"sources":["../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/lodash/_shuffleSelf.js","../node_modules/lodash/shuffle.js","../node_modules/lodash/_arrayShuffle.js","../node_modules/lodash/_baseShuffle.js","views/ProfileCreation/config.ts","views/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/ProfileCreation/Header.tsx","views/ProfileCreation/WalletNotConnected.tsx","views/ProfileCreation/NextStepButton.tsx","views/ProfileCreation/contexts/hook.ts","views/ProfileCreation/Mint.tsx","views/ProfileCreation/ProfilePicture.tsx","views/ProfileCreation/TeamSelection.tsx","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/formatDistance/index.js","views/ProfileCreation/UserName.tsx","views/ProfileCreation/ConfirmProfileCreationModal.tsx","views/ProfileCreation/Steps.tsx","views/ProfileCreation/index.tsx","state/nftMarket/hooks.ts","hooks/useApproveConfirmTransaction.ts","components/ApproveConfirmButtons.tsx","../node_modules/lodash/isEmpty.js","views/Nft/market/Profile/hooks/useFetchUserNfts.tsx","state/teams/hooks.ts","views/ProfileCreation/SelectionCard.tsx","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js"],"names":["differenceInSeconds","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","diff","differenceInMilliseconds","Math","floor","ceil","baseRandom","require","module","exports","array","size","index","length","lastIndex","undefined","rand","value","arrayShuffle","baseShuffle","isArray","collection","copyArray","shuffleSelf","values","MINT_COST","parseUnits","REGISTER_COST","STARTER_NFT_BUNNY_IDS","totalCost","add","allowance","mul","initialState","isInitialized","currentStep","teamId","selectedNft","collectionAddress","tokenId","userName","minimumCakeRequired","reducer","state","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","children","useReducer","dispatch","account","useWeb3React","useEffect","isSubscribed","a","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","actions","useMemo","nextStep","setTeamId","setSelectedNft","setUserName","Provider","Wrapper","styled","div","theme","colors","textSubtle","steps","Header","t","useTranslation","useContext","as","scale","color","mb","id","href","nftsBaseUrl","variant","map","translationKey","WalletNotConnected","ConnectWalletButton","NextStepButton","props","endIcon","useProfileCreation","Mint","useState","selectedBunnyId","setSelectedBunnyId","starterNfts","setStarterNfts","collections","useGetCollections","toastSuccess","useToast","useAppDispatch","cakeContract","useCake","useBunnyFactory","useGetCakeBalance","cakeBalance","balance","hasMinimumCakeRequired","fetchStatus","FetchStatus","SUCCESS","gte","callWithGasPrice","useCallWithGasPrice","getStarterNfts","getNftsFromCollectionApi","pancakeBunniesAddress","allPbTokens","data","nfts","bunnyId","useApproveConfirmTransaction","onRequiresApproval","address","response","onApprove","toString","onConfirm","onApproveSuccess","onSuccess","fetchUserNfts","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","fontSize","bold","num","formatUnits","nft","SelectionCard","name","image","thumbnail","isChecked","onChange","disabled","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","Link","RouterLink","primary","NftWrapper","ProfilePicture","library","setIsApproved","setIsApproving","useUserNfts","userNftsInitializationState","useFetchUserNfts","toastError","contract","getErc721Contract","getSigner","getPancakeProfileAddress","tx","wait","status","UserNftInitializationState","INITIALIZED","to","style","marginLeft","walletNft","firstTokenId","isLoading","spin","Team","currentTeamId","teams","useTeams","handleTeamSelection","parseInt","teamValues","shuffle","Object","team","images","md","isJoinable","mr","users","toLocaleString","isLastDayOfMonth","dirtyDate","date","toDate","endOfDay","getTime","endOfMonth","differenceInMonths","result","dateLeft","dateRight","sign","compareAsc","difference","abs","differenceInCalendarMonths","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","Number","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyBaseDate","options","locale","defaultLocale","RangeError","comparison","isNaN","localizeOptions","cloneObject","addSuffix","Boolean","months","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","ExistingUserState","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","toJSON","receipt","fetchProfile","Toast","txHash","transactionHash","title","justifyContent","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","useWeb3Provider","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","message","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","API_PROFILE","res","ok","json","error","signMessage","signature","method","headers","body","JSON","stringify","username","dateCreated","parseISO","created_at","Date","NEW","fetchUser","height","width","event","target","isWarning","isSuccess","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","flex","checked","ml","mt","Steps","TeamSelection","ProfileCreation","hasProfile","useFetchCollections","PageLoader","toLowerCase","Page","fetchCollections","useFetchCollection","fetchCollection","useFetchByBunnyIdAndUpdate","useSelector","nftMarket","loadingState","latestPancakeBunniesUpdateAt","isUpdatingPancakeBunnies","existingBunniesInState","useGetAllBunniesByBunnyId","existingTokensWithBunnyId","allPancakeBunnies","useNftsFromCollection","allExistingPBTokenIds","firstBunny","existingMetadata","description","collectionName","fetchMorePancakeBunnies","orderDirection","fetchNewPBAndUpdateExisting","useLoadingState","useGetCollection","checksummedCollectionAddress","isAddress","filter","attributes","marketData","isTradable","useGetNFTInitializationState","initializationState","user","useHasGen0Nfts","some","approvalState","confirmState","noop","handlePreApprove","useRef","current","then","hasApproveFailed","hasConfirmFailed","params","ButtonArrangement","StyledApproveConfirmButtonRow","mediaQueries","Button","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","buttonArrangement","ROW","confirmLabel","confirmId","confirmButtonText","baseKeys","getTag","isArguments","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","prototype","splice","tag","key","call","profile","isProfileInitialized","isProfileLoading","hasProfileNft","profileNftTokenId","profileNftCollectionAddress","profileNftWithCollectionAddress","nftLocation","NftLocation","PROFILE","previousProfileNftTokenId","usePreviousValue","shouldFetch","UNINITIALIZED","hasAccountSwitched","isEmpty","useTeam","fetchTeam","fetchTeams","Label","label","isDisabled","Body","Children","StyledBackgroundImage","src","e","dirtyObject","assign"],"mappings":"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","file":"static/js/12.4381967a.chunk.js","sourcesContent":["import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","import { parseUnits } from '@ethersproject/units'\n\nexport const MINT_COST = parseUnits('1')\nexport const REGISTER_COST = parseUnits('0.5')\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_NFT_BUNNY_IDS = ['5', '6', '7', '8', '9'] // 'sleepy', 'dollop', 'twinkle', 'churro', 'sunny'\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST.add(REGISTER_COST)\nconst allowance = totalCost.mul(ALLOWANCE_MULTIPLIER)\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  selectedNft: {\n    collectionAddress: null,\n    tokenId: null,\n  },\n  userName: '',\n  minimumCakeRequired: totalCost,\n  allowance,\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_selected_nft':\n      return {\n        ...state,\n        selectedNft: {\n          tokenId: action.tokenId,\n          collectionAddress: action.collectionAddress,\n        },\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.canMint(account)\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setSelectedNft: (tokenId: string, collectionAddress: string) =>\n        dispatch({ type: 'set_selected_nft', tokenId, collectionAddress }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text, Link, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-top: 32px;\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\n\nconst Header: React.FC = () => {\n  const { t } = useTranslation()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\" id=\"profile-setup-title\">\n        {t('Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\n        {t('Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {t('Total cost: 1.5 CAKE')}\n      </Text>\n      <Link href={`${nftsBaseUrl}/profile`}>\n        <Button mb=\"24px\" scale=\"sm\" variant=\"secondary\">\n          {t('Back to profile')}\n        </Button>\n      </Link>\n      <Breadcrumbs>\n        {steps.map((translationKey, index) => {\n          return (\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {t(translationKey)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\n\nconst WalletNotConnected = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div>\n      <Heading scale=\"xl\" mb=\"8px\">\n        {t('Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {t('Please connect your wallet to continue')}\n      </Text>\n      <ConnectWalletButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState, useEffect } from 'react'\nimport { formatUnits } from '@ethersproject/units'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\nimport useToast from 'hooks/useToast'\nimport { useAppDispatch } from 'state'\nimport { fetchUserNfts } from 'state/nftMarket/reducer'\nimport { useGetCollections } from 'state/nftMarket/hooks'\nimport { getNftsFromCollectionApi } from 'state/nftMarket/helpers'\nimport { ApiSingleTokenData } from 'state/nftMarket/types'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport SelectionCard from './SelectionCard'\nimport NextStepButton from './NextStepButton'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_NFT_BUNNY_IDS } from './config'\n\ninterface MintNftData extends ApiSingleTokenData {\n  bunnyId?: string\n}\n\nconst Mint: React.FC = () => {\n  const [selectedBunnyId, setSelectedBunnyId] = useState<string>('')\n  const [starterNfts, setStarterNfts] = useState<MintNftData[]>([])\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const collections = useGetCollections()\n  const { toastSuccess } = useToast()\n  const dispatch = useAppDispatch()\n\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const { t } = useTranslation()\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(MINT_COST)\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  useEffect(() => {\n    const getStarterNfts = async () => {\n      const { data: allPbTokens } = await getNftsFromCollectionApi(pancakeBunniesAddress)\n      const nfts = STARTER_NFT_BUNNY_IDS.map((bunnyId) => {\n        if (allPbTokens && allPbTokens[bunnyId]) {\n          return { ...allPbTokens[bunnyId], bunnyId }\n        }\n        return undefined\n      })\n      setStarterNfts(nfts)\n    }\n    if (starterNfts.length === 0) {\n      getStarterNfts()\n    }\n  }, [starterNfts])\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        // TODO: Move this to a helper, this check will be probably be used many times\n        try {\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\n          return response.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return callWithGasPrice(cakeContract, 'approve', [bunnyFactoryContract.address, allowance.toString()])\n      },\n      onConfirm: () => {\n        return callWithGasPrice(bunnyFactoryContract, 'mintNFT', [selectedBunnyId])\n      },\n      onApproveSuccess: () => {\n        toastSuccess('Enabled', \"Press 'confirm' to mint this NFT\")\n      },\n      onSuccess: () => {\n        toastSuccess('Success', 'You have minted your starter NFT')\n        dispatch(fetchUserNfts({ account, collections }))\n        actions.nextStep()\n      },\n    })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 1 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {t('Cost: %num% CAKE', { num: formatUnits(MINT_COST) })}\n          </Text>\n          {starterNfts.map((nft) => {\n            const handleChange = (value: string) => setSelectedBunnyId(value)\n\n            return (\n              <SelectionCard\n                key={nft?.name}\n                name=\"mintStarter\"\n                value={nft?.bunnyId}\n                image={nft?.image.thumbnail}\n                isChecked={selectedBunnyId === nft?.bunnyId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft?.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {t('A minimum of %num% CAKE is required', { num: formatUnits(MINT_COST) })}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={selectedBunnyId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserNfts } from 'state/nftMarket/hooks'\nimport useToast from 'hooks/useToast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport useFetchUserNfts from 'views/Nft/market/Profile/hooks/useFetchUserNfts'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport { UserNftInitializationState } from 'state/nftMarket/types'\nimport SelectionCard from './SelectionCard'\nimport NextStepButton from './NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const { library, account } = useWeb3React()\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\n\n  const { nfts, userNftsInitializationState } = useUserNfts()\n  useFetchUserNfts(account)\n\n  const { t } = useTranslation()\n  const { toastError, toastSuccess } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const handleApprove = async () => {\n    const contract = getErc721Contract(selectedNft.collectionAddress, library.getSigner())\n    const tx = await callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\n    setIsApproving(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Enabled'), t('Please progress to the next step.'))\n      setIsApproving(false)\n      setIsApproved(true)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsApproving(false)\n    }\n  }\n\n  if (nfts.length === 0 && userNftsInitializationState === UserNftInitializationState.INITIALIZED) {\n    return (\n      <>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {t(\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 2 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Only approved Pancake Collectibles can be used.')}\n            <Link to={`${nftsBaseUrl}/collections`} style={{ marginLeft: '4px' }}>\n              {t('See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {nfts.map((walletNft) => {\n              const firstTokenId = nfts[0].tokenId\n              return (\n                <SelectionCard\n                  name=\"profilePicture\"\n                  key={walletNft.tokenId}\n                  value={firstTokenId}\n                  image={walletNft.image.thumbnail}\n                  isChecked={firstTokenId === selectedNft.tokenId}\n                  onChange={(value: string) => actions.setSelectedNft(value, walletNft.collectionAddress)}\n                >\n                  <Text bold>{walletNft.name}</Text>\n                </SelectionCard>\n              )\n            })}\n          </NftWrapper>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t(\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n            id=\"approveStarterCollectible\"\n          >\n            {t('Enable')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/teams/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport SelectionCard from './SelectionCard'\nimport NextStepButton from './NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const { t } = useTranslation()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 3 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport { formatUnits } from '@ethersproject/units'\nimport { API_PROFILE } from 'config/constants/endpoints'\nimport useToast from 'hooks/useToast'\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\nimport { signMessage } from 'utils/web3React'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from './ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const { library } = useWeb3Provider()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(REGISTER_COST)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      selectedNft={selectedNft}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${API_PROFILE}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const signature = await signMessage(library, account, userName)\n      const response = await fetch(`${API_PROFILE}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(t('Error'), data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${API_PROFILE}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Unable to verify username'))\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 4 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={t('Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {t(\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {t('Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button\n        onClick={onPresentConfirmProfileCreation}\n        disabled={!isValid || !isUserCreated}\n        id=\"completeProfileCreation\"\n      >\n        {t('Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {t('A minimum of %num% CAKE is required', { num: formatUnits(REGISTER_COST) })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from '@ethersproject/units'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\nimport { REGISTER_COST } from './config'\nimport { State } from './contexts/types'\n\ninterface Props {\n  userName: string\n  selectedNft: State['selectedNft']\n  account: string\n  teamId: number\n  minimumCakeRequired: ethers.BigNumber\n  allowance: ethers.BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const profileContract = useProfile()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, profileContract.address)\n          return response.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return callWithGasPrice(cakeContract, 'approve', [profileContract.address, allowance.toJSON()])\n      },\n      onConfirm: () => {\n        return callWithGasPrice(profileContract, 'createProfile', [\n          teamId,\n          selectedNft.collectionAddress,\n          selectedNft.tokenId,\n        ])\n      },\n      onSuccess: async ({ receipt }) => {\n        await dispatch(fetchProfile(account))\n        onDismiss()\n        toastSuccess(t('Profile created!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      },\n    })\n\n  return (\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{t('Cost')}</Text>\n        <Text>{t('%num% CAKE', { num: formatUnits(REGISTER_COST) })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import React, { useContext } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport NoWalletConnected from './WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { t } = useTranslation()\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>{t('Loading...')}</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Redirect } from 'react-router'\nimport Page from 'components/Layout/Page'\nimport { useProfile } from 'state/profile/hooks'\nimport PageLoader from 'components/Loader/PageLoader'\nimport useFetchUserNfts from 'views/Nft/market/Profile/hooks/useFetchUserNfts'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport { useFetchCollections } from 'state/nftMarket/hooks'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => {\n  const { account } = useWeb3React()\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n\n  useFetchUserNfts(account)\n  useFetchCollections()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && hasProfile) {\n    return <Redirect to={`${nftsBaseUrl}/profile/${account.toLowerCase()}`} />\n  }\n\n  return (\n    <>\n      <ProfileCreationProvider>\n        <Page>\n          <Header />\n          <Steps />\n        </Page>\n      </ProfileCreationProvider>\n    </>\n  )\n}\n\nexport default ProfileCreation\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport { isAddress } from 'utils'\nimport { fetchCollection, fetchCollections, fetchNewPBAndUpdateExisting } from './reducer'\nimport { State } from '../types'\nimport { NftToken, UserNftsState } from './types'\n\nconst MAX_GEN0_ID = 4\n\nexport const useFetchCollections = () => {\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(fetchCollections())\n  }, [dispatch])\n}\n\nexport const useFetchCollection = (collectionAddress: string) => {\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(fetchCollection(collectionAddress))\n  }, [dispatch, collectionAddress])\n}\n\n// Returns a function that fetches more NFTs for specified bunny id\n// as well as updating existing PB NFTs in state\n// Note: PancakeBunny specific\nexport const useFetchByBunnyIdAndUpdate = (bunnyId: string) => {\n  const dispatch = useAppDispatch()\n\n  const { latestPancakeBunniesUpdateAt, isUpdatingPancakeBunnies } = useSelector(\n    (state: State) => state.nftMarket.data.loadingState,\n  )\n\n  // Extra guard in case market data shifts\n  // we don't wanna fetch same tokens multiple times\n  const existingBunniesInState = useGetAllBunniesByBunnyId(bunnyId)\n  const existingTokensWithBunnyId = existingBunniesInState ? existingBunniesInState.map((nft) => nft.tokenId) : []\n\n  const allPancakeBunnies = useNftsFromCollection(pancakeBunniesAddress)\n  const allExistingPBTokenIds = allPancakeBunnies ? allPancakeBunnies.map((nft) => nft.tokenId) : []\n\n  const firstBunny = existingBunniesInState.length > 0 ? existingBunniesInState[0] : null\n\n  // If we already have NFT with this bunny id in state - we can reuse its metadata without making API request\n  const existingMetadata = useMemo(() => {\n    return firstBunny\n      ? {\n          name: firstBunny.name,\n          description: firstBunny.description,\n          collection: { name: firstBunny.collectionName },\n          image: firstBunny.image,\n        }\n      : null\n  }, [firstBunny])\n\n  // This fetches more bunnies when called\n  const fetchMorePancakeBunnies = (orderDirection: 'asc' | 'desc') => {\n    dispatch(\n      fetchNewPBAndUpdateExisting({\n        bunnyId,\n        existingTokensWithBunnyId,\n        allExistingPBTokenIds,\n        existingMetadata,\n        orderDirection,\n      }),\n    )\n  }\n\n  return { isUpdatingPancakeBunnies, latestPancakeBunniesUpdateAt, fetchMorePancakeBunnies }\n}\n\nexport const useLoadingState = () => {\n  return useSelector((state: State) => state.nftMarket.data.loadingState)\n}\n\nexport const useGetCollections = () => {\n  return useSelector((state: State) => state.nftMarket.data.collections)\n}\n\nexport const useGetCollection = (collectionAddress: string) => {\n  const checksummedCollectionAddress = isAddress(collectionAddress) || ''\n  const collections = useGetCollections()\n  return collections[checksummedCollectionAddress]\n}\n\nexport const useNftsFromCollection = (collectionAddress: string) => {\n  const checksummedCollectionAddress = isAddress(collectionAddress) || ''\n  const nfts: NftToken[] = useSelector((state: State) => state.nftMarket.data.nfts[checksummedCollectionAddress])\n  return nfts\n}\n\nexport const useGetAllBunniesByBunnyId = (bunnyId: string) => {\n  const nfts: NftToken[] = useSelector((state: State) => state.nftMarket.data.nfts[pancakeBunniesAddress])\n  return nfts ? nfts.filter((nft) => nft.attributes[0].value === bunnyId && nft.marketData.isTradable) : []\n}\n\nexport const useGetNFTInitializationState = () => {\n  return useSelector((state: State) => state.nftMarket.initializationState)\n}\n\nexport const useUserNfts = (): UserNftsState => {\n  return useSelector((state: State) => state.nftMarket.data.user)\n}\n\nexport const useHasGen0Nfts = (): boolean => {\n  const userNfts = useSelector((state: State) => state.nftMarket.data.user)\n  return userNfts.nfts.some((nft) => nft.attributes && Number(nft.attributes[0]?.value) <= MAX_GEN0_ID)\n}\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface OnSuccessProps {\n  state: State\n  receipt: ethers.providers.TransactionReceipt\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\n  onConfirm: (params?) => Promise<ethers.providers.TransactionResponse>\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    hasApproveFailed: state.approvalState === 'fail',\n    hasConfirmFailed: state.confirmState === 'fail',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async (params = {}) => {\n      dispatch({ type: 'confirm_sending' })\n      try {\n        const tx = await onConfirm(params)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n  confirmLabel?: string\n  confirmId?: string\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n  confirmLabel,\n  confirmId,\n}) => {\n  const { t } = useTranslation()\n  const confirmButtonText = confirmLabel ?? t('Confirm')\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Enabling') : t('Enable')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            id={confirmId}\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : confirmButtonText}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              id={confirmId}\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : confirmButtonText}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Enabling') : t('Enable')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","import { useEffect, useMemo } from 'react'\nimport isEmpty from 'lodash/isEmpty'\nimport { useAppDispatch } from 'state'\nimport { fetchUserNfts } from 'state/nftMarket/reducer'\nimport { useGetCollections, useUserNfts } from 'state/nftMarket/hooks'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { useProfile } from 'state/profile/hooks'\nimport { NftLocation, UserNftInitializationState } from 'state/nftMarket/types'\n\n// We need to fetch collectibles for non-connected accounts, hence this hook accepts an account string.\nconst useFetchUserNfts = (account: string) => {\n  const dispatch = useAppDispatch()\n  const { profile, isInitialized: isProfileInitialized, isLoading: isProfileLoading } = useProfile()\n  const { userNftsInitializationState } = useUserNfts()\n  const collections = useGetCollections()\n\n  const hasProfileNft = profile?.tokenId\n  const profileNftTokenId = profile?.tokenId?.toString()\n  const profileNftCollectionAddress = profile?.collectionAddress\n\n  const profileNftWithCollectionAddress = useMemo(() => {\n    if (hasProfileNft) {\n      return {\n        tokenId: profileNftTokenId,\n        collectionAddress: profileNftCollectionAddress,\n        nftLocation: NftLocation.PROFILE,\n      }\n    }\n    return null\n  }, [profileNftTokenId, profileNftCollectionAddress, hasProfileNft])\n\n  const previousProfileNftTokenId = usePreviousValue(profileNftTokenId)\n\n  // Fetch on first load when profile fetch is resolved\n  const shouldFetch =\n    account &&\n    userNftsInitializationState === UserNftInitializationState.UNINITIALIZED &&\n    isProfileInitialized &&\n    !isProfileLoading\n\n  // Fetch on account / profile change, once profile fetch is resolved\n  const hasAccountSwitched = previousProfileNftTokenId !== profileNftTokenId && !isProfileLoading\n\n  useEffect(() => {\n    if ((shouldFetch || hasAccountSwitched) && !isEmpty(collections)) {\n      dispatch(fetchUserNfts({ account, collections, profileNftWithCollectionAddress }))\n    }\n  }, [\n    dispatch,\n    account,\n    shouldFetch,\n    hasAccountSwitched,\n    profileNftTokenId,\n    collections,\n    profileNftWithCollectionAddress,\n  ])\n}\n\nexport default useFetchUserNfts\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport { State, TeamsState } from '../types'\nimport { fetchTeam, fetchTeams } from '.'\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@pancakeswap/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <Card isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </Card>\n  )\n}\n\nexport default SelectionCard\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}"],"sourceRoot":""}