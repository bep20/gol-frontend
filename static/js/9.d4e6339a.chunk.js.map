{"version":3,"sources":["../node_modules/lodash/capitalize.js","components/CollapsibleCard/index.tsx","views/Nft/market/Collection/Traits/styles.tsx","views/Nft/market/Collection/Traits/PancakeBunniesTraits.tsx","views/Nft/market/Collection/Traits/utils.tsx","views/Nft/market/Collection/Traits/CollectionTraits.tsx","views/Nft/market/Collection/Traits/index.tsx","../node_modules/lodash/times.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/_castFunction.js","components/AddressInputSelect/index.tsx","views/Nft/market/components/MarketPageHeader.tsx","views/Nft/market/components/StatBox.tsx","views/Nft/market/components/CollectibleCard/styles.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","../node_modules/lodash/upperFirst.js","../node_modules/lodash/_hasUnicode.js","views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","../node_modules/lodash/sum.js","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx","views/Nft/market/hooks/useGetLowestPrice.ts","views/Nft/market/hooks/useGetCollectionDistribution.tsx","../node_modules/lodash/_createCaseFirst.js","../node_modules/lodash/_castSlice.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_stringToArray.js","../node_modules/lodash/_asciiToArray.js","../node_modules/lodash/_unicodeToArray.js","../node_modules/lodash/_baseSum.js","views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx"],"names":["toString","require","upperFirst","module","exports","string","toLowerCase","CollapsibleCard","initialOpenState","title","children","props","useState","isOpen","setIsOpen","p","alignItems","justifyContent","as","variant","scale","onClick","width","StyledSortButton","styled","button","theme","colors","secondary","TableWrapper","div","NftImage","Image","ClickableRow","tr","NftName","thumbnailSrc","name","src","height","mr","LowestPriceCell","bunnyId","useGetLowestPriceFromBunnyId","isFetching","lowestPrice","amount","PancakeBunniesTraits","collectionAddress","tokenApiResponse","setTokenApiResponse","raritySort","setRaritySort","t","useTranslation","push","useHistory","useEffect","a","getNftsFromCollectionApi","apiResponse","fetchTokens","totalMinted","sum","Object","values","attributesDistribution","sortedBunnieKeys","useMemo","keys","data","sort","bunnyIdA","bunnyIdB","bunnyCountA","bunnyCountB","sortBunniesByRarityBuilder","textAlign","type","currentValue","color","map","nft","count","percentage","nftsBaseUrl","image","thumbnail","formatNumber","times","bunnyCnt","CollectionTraits","useGetCollectionDistribution","traitType","index","total","traitValues","reduce","accum","traitValue","rarity","value","sortType","capitalize","mb","prevRaritySort","orderBy","Traits","useParams","dispatch","useAppDispatch","collection","useGetCollection","fetchCollection","Header","Container","py","pancakeBunniesAddress","baseTimes","castFunction","toInteger","MAX_ARRAY_LENGTH","nativeMin","Math","min","n","iteratee","length","result","toFinite","remainder","identity","ResultStatus","SubMenu","input","inputSecondary","radii","default","AddressLink","Text","initialState","resultFound","NOT_VALID","defaultValidAddressHandler","Promise","resolve","AddressInputSelect","onValidAddress","onAddressClick","state","setState","isAddress","prevState","hasResults","FOUND","NOT_FOUND","validAddressHandler","position","placeholder","subject","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","px","fontWeight","MarketPageHeader","background","useTheme","isDark","StatBoxItem","stat","fontSize","mx","StatBox","Flex","invertedContrast","cardBorder","card","BNBAmountLabel","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","CostLabel","cost","bnbBusdPrice","priceInUsd","multiplyPriceByAmount","MetaRow","maxWidth","ellipsis","StyledCollectibleCard","Card","mediaQueries","lg","LowestPriceMetaRow","AvatarImage","attrs","alt","borderColor","createCaseFirst","reHasUnicode","RegExp","test","SearchBar","history","MarketPageTitle","description","gridGap","gridTemplateColumns","BaseSubMenu","SubMenuItems","baseSum","array","StyledBannerImage","sm","md","BannerHeader","bannerImage","bannerAlt","avatar","flexDirection","pb","BannerImage","bottom","left","getBunnyIdFromNft","attributes","find","attr","setIsFetching","setLowestPrice","getNftsMarketData","otherId","isTradable","response","tokenMarketData","parseFloat","currentAskPrice","fetchLowestPrice","useGetLowestPriceFromNft","isPancakeBunny","bunnyIdAttr","useGetCollectionDistributionPB","getCollectionDistributionApi","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","join","slice","baseSlice","start","end","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match","current","BackLink","RouterLink","primary","TopBar","to","LowestPriceStatBoxItem","getLowestPriceInCollection","lowestCollectionPrice","formattedLowestPrice","symbol","totalSupply","numberTokensListed","totalVolumeBNB","banner","useLocation","pathname","hash","volume","itemsConfig","label","href","large","Number","address","items","activeItem","mt"],"mappings":"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","file":"static/js/9.d4e6339a.chunk.js","sourcesContent":["var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","import React, { useState } from 'react'\nimport {\n  CardProps,\n  CardHeader,\n  Card,\n  Flex,\n  Heading,\n  IconButton,\n  ChevronUpIcon,\n  ChevronDownIcon,\n} from '@pancakeswap/uikit'\n\ninterface CollapsibleCardProps extends CardProps {\n  initialOpenState?: boolean\n  title: string\n}\n\nconst CollapsibleCard: React.FC<CollapsibleCardProps> = ({ initialOpenState = true, title, children, ...props }) => {\n  const [isOpen, setIsOpen] = useState(initialOpenState)\n\n  const toggleOpen = () => setIsOpen(!isOpen)\n\n  return (\n    <Card {...props}>\n      <CardHeader p=\"16px\">\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Heading as=\"h3\">{title}</Heading>\n          <IconButton variant=\"text\" scale=\"sm\" onClick={toggleOpen}>\n            {isOpen ? <ChevronUpIcon width=\"24px\" /> : <ChevronDownIcon width=\"24px\" />}\n          </IconButton>\n        </Flex>\n      </CardHeader>\n      {isOpen && children}\n    </Card>\n  )\n}\n\nexport default CollapsibleCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Image, Text } from '@pancakeswap/uikit'\n\nexport const StyledSortButton = styled.button`\n  border: none;\n  cursor: pointer;\n  background: none;\n  color: ${({ theme }) => theme.colors.secondary};\n  font-weight: bold;\n`\n\nexport const TableWrapper = styled.div`\n  -webkit-overflow-scrolling: touch;\n  min-width: 320px;\n  overflow-x: auto;\n`\n\nexport const NftImage = styled(Image)`\n  flex: none;\n  & > img {\n    border-radius: 8px;\n  }\n`\n\nexport const ClickableRow = styled.tr`\n  cursor: pointer;\n\n  &:hover {\n    td {\n      opacity: 0.65;\n    }\n  }\n`\n\nexport const NftName: React.FC<{ thumbnailSrc: string; name: string }> = ({ thumbnailSrc, name }) => (\n  <Flex alignItems=\"center\">\n    <NftImage src={thumbnailSrc} width={48} height={48} mr=\"8px\" />\n    <Text>{name}</Text>\n  </Flex>\n)\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { Skeleton, Table, Td, Th, Flex, ArrowUpIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { useHistory } from 'react-router'\nimport times from 'lodash/times'\nimport sum from 'lodash/sum'\nimport { formatNumber } from 'utils/formatBalance'\nimport { getNftsFromCollectionApi } from 'state/nftMarket/helpers'\nimport { ApiResponseCollectionTokens } from 'state/nftMarket/types'\nimport { useTranslation } from 'contexts/Localization'\nimport CollapsibleCard from 'components/CollapsibleCard'\nimport { useGetLowestPriceFromBunnyId } from '../../hooks/useGetLowestPrice'\nimport { BNBAmountLabel } from '../../components/CollectibleCard/styles'\nimport { sortBunniesByRarityBuilder } from './utils'\nimport { nftsBaseUrl } from '../../constants'\nimport { SortType } from '../../types'\nimport { ClickableRow, NftName, StyledSortButton, TableWrapper } from './styles'\n\ninterface PancakeBunniesTraitsProps {\n  collectionAddress: string\n}\n\nconst LowestPriceCell: React.FC<{ bunnyId: string }> = ({ bunnyId }) => {\n  const { isFetching, lowestPrice } = useGetLowestPriceFromBunnyId(bunnyId)\n\n  if (isFetching) {\n    return (\n      <Flex justifyContent=\"flex-end\" width=\"100px\">\n        <Skeleton height=\"24px\" width=\"48px\" />\n      </Flex>\n    )\n  }\n\n  if (!lowestPrice) {\n    return null\n  }\n\n  return <BNBAmountLabel justifyContent=\"flex-end\" amount={lowestPrice} width=\"100px\" />\n}\n\nconst PancakeBunniesTraits: React.FC<PancakeBunniesTraitsProps> = ({ collectionAddress }) => {\n  const [tokenApiResponse, setTokenApiResponse] = useState<ApiResponseCollectionTokens>(null)\n  const [raritySort, setRaritySort] = useState<SortType>('asc')\n  const { t } = useTranslation()\n  const { push } = useHistory()\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      const apiResponse = await getNftsFromCollectionApi(collectionAddress)\n      setTokenApiResponse(apiResponse)\n    }\n\n    fetchTokens()\n  }, [collectionAddress, setTokenApiResponse])\n\n  const totalMinted = tokenApiResponse ? sum(Object.values(tokenApiResponse.attributesDistribution)) : 0\n\n  const sortedBunnieKeys = useMemo(() => {\n    if (!tokenApiResponse) return []\n\n    return Object.keys(tokenApiResponse.data).sort(sortBunniesByRarityBuilder({ raritySort, data: tokenApiResponse }))\n  }, [raritySort, tokenApiResponse])\n\n  const toggleRaritySort = () => {\n    setRaritySort((currentValue) => (currentValue === 'asc' ? 'desc' : 'asc'))\n  }\n\n  return (\n    <>\n      {tokenApiResponse ? (\n        <CollapsibleCard title=\"Bunny Id\">\n          <TableWrapper>\n            <Table>\n              <thead>\n                <tr>\n                  <Th textAlign=\"left\">{t('Name')}</Th>\n                  <Th>{t('Count')}</Th>\n                  <Th>\n                    <StyledSortButton type=\"button\" onClick={toggleRaritySort}>\n                      <Flex alignItems=\"center\">\n                        {t('Rarity')}\n                        {raritySort === 'asc' ? <ArrowUpIcon color=\"secondary\" /> : <ArrowDownIcon color=\"secondary\" />}\n                      </Flex>\n                    </StyledSortButton>\n                  </Th>\n                  <Th textAlign=\"right\">{t('Lowest')}</Th>\n                </tr>\n              </thead>\n              <tbody>\n                {sortedBunnieKeys.map((bunnyId) => {\n                  const nft = tokenApiResponse.data[bunnyId]\n                  if (!nft) {\n                    // Some bunnies don't exist on testnet\n                    return null\n                  }\n                  const count: number = tokenApiResponse.attributesDistribution[bunnyId] ?? 0\n                  const percentage = (count / totalMinted) * 100\n                  const handleClick = () => {\n                    push(`${nftsBaseUrl}/collections/${collectionAddress}/${bunnyId}`)\n                  }\n\n                  return (\n                    <ClickableRow key={bunnyId} onClick={handleClick} title={t('Click to view NFT')}>\n                      <Td>\n                        <NftName thumbnailSrc={nft.image.thumbnail} name={nft.name} />\n                      </Td>\n                      <Td textAlign=\"center\">{formatNumber(count, 0, 0)}</Td>\n                      <Td textAlign=\"center\">{`${formatNumber(percentage, 0, 2)}%`}</Td>\n                      <Td textAlign=\"right\" width=\"100px\">\n                        <LowestPriceCell bunnyId={bunnyId} />\n                      </Td>\n                    </ClickableRow>\n                  )\n                })}\n              </tbody>\n            </Table>\n          </TableWrapper>\n        </CollapsibleCard>\n      ) : (\n        <CollapsibleCard title={t('Loading...')}>\n          <Table>\n            <thead>\n              <tr>\n                <Th textAlign=\"left\">{t('Name')}</Th>\n                <Th>{t('Count')}</Th>\n                <Th>{t('Rarity')}</Th>\n                <Th>{t('Lowest')}</Th>\n              </tr>\n            </thead>\n            <tbody>\n              {times(19).map((bunnyCnt) => (\n                <tr key={bunnyCnt}>\n                  <Td>\n                    <Flex alignItems=\"center\">\n                      <Skeleton height=\"48px\" width=\"48px\" mr=\"8px\" />\n                      <Skeleton width=\"100px\" />\n                    </Flex>\n                  </Td>\n                  <Td>\n                    <Skeleton />\n                  </Td>\n                  <Td>\n                    <Skeleton />\n                  </Td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </CollapsibleCard>\n      )}\n    </>\n  )\n}\n\nexport default PancakeBunniesTraits\n","import { ApiResponseCollectionTokens } from 'state/nftMarket/types'\n\ntype sortBuilder = {\n  data: ApiResponseCollectionTokens\n  raritySort: string\n}\n\nexport const sortBunniesByRarityBuilder =\n  ({ raritySort, data }: sortBuilder) =>\n  (bunnyIdA, bunnyIdB) => {\n    const bunnyCountA = data.attributesDistribution[bunnyIdA] ?? 0\n    const bunnyCountB = data.attributesDistribution[bunnyIdB] ?? 0\n\n    return raritySort === 'asc' ? bunnyCountA - bunnyCountB : bunnyCountB - bunnyCountA\n  }\n","import React, { useState } from 'react'\nimport times from 'lodash/times'\nimport capitalize from 'lodash/capitalize'\nimport sum from 'lodash/sum'\nimport orderBy from 'lodash/orderBy'\nimport { ArrowDownIcon, ArrowUpIcon, Flex, Skeleton, Table, Td, Th } from '@pancakeswap/uikit'\nimport { formatNumber } from 'utils/formatBalance'\nimport CollapsibleCard from 'components/CollapsibleCard'\nimport { useTranslation } from 'contexts/Localization'\nimport { SortType } from '../../types'\nimport { StyledSortButton, TableWrapper } from './styles'\nimport useGetCollectionDistribution from '../../hooks/useGetCollectionDistribution'\n\ninterface CollectionTraitsProps {\n  collectionAddress: string\n}\n\nconst CollectionTraits: React.FC<CollectionTraitsProps> = ({ collectionAddress }) => {\n  const { data, isFetching } = useGetCollectionDistribution(collectionAddress)\n  const [raritySort, setRaritySort] = useState<Record<string, SortType>>({})\n  const { t } = useTranslation()\n\n  if (isFetching) {\n    return (\n      <CollapsibleCard title={t('Loading...')}>\n        <Table>\n          <thead>\n            <tr>\n              <Th textAlign=\"left\">{t('Name')}</Th>\n              <Th width=\"100px\">{t('Count')}</Th>\n              <Th width=\"160px\">{t('Rarity')}</Th>\n            </tr>\n          </thead>\n          <tbody>\n            {times(19).map((bunnyCnt) => (\n              <tr key={bunnyCnt}>\n                <Td>\n                  <Skeleton width=\"100px\" />\n                </Td>\n                <Td>\n                  <Skeleton />\n                </Td>\n                <Td>\n                  <Skeleton />\n                </Td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </CollapsibleCard>\n    )\n  }\n\n  return (\n    <>\n      {data &&\n        Object.keys(data).map((traitType, index) => {\n          const total = sum(Object.values(data[traitType]))\n\n          // Parse the distribution values into an array to make it easier to sort\n          const traitValues: { value: string; count: number; rarity: number }[] = Object.keys(data[traitType]).reduce(\n            (accum, traitValue) => {\n              const count = data[traitType][traitValue]\n              const rarity = (count / total) * 100\n\n              return [...accum, { value: traitValue, count, rarity }]\n            },\n            [],\n          )\n          const sortType = raritySort[traitType] || 'desc'\n\n          const toggleRaritySort = () => {\n            setRaritySort((prevRaritySort) => {\n              if (!prevRaritySort[traitType]) {\n                return {\n                  ...prevRaritySort,\n                  [traitType]: 'asc',\n                }\n              }\n\n              return {\n                ...prevRaritySort,\n                [traitType]: prevRaritySort[traitType] === 'asc' ? 'desc' : 'asc',\n              }\n            })\n          }\n\n          return (\n            <CollapsibleCard key={traitType} title={capitalize(traitType)} initialOpenState={index <= 1} mb=\"32px\">\n              <TableWrapper>\n                <Table>\n                  <thead>\n                    <tr>\n                      <Th textAlign=\"left\">{t('Name')}</Th>\n                      <Th width=\"100px\">{t('Count')}</Th>\n                      <Th width=\"160px\">\n                        <StyledSortButton type=\"button\" onClick={toggleRaritySort}>\n                          <Flex alignItems=\"center\">\n                            {t('Rarity')}\n                            {raritySort[traitType] === 'asc' ? (\n                              <ArrowUpIcon color=\"secondary\" />\n                            ) : (\n                              <ArrowDownIcon color=\"secondary\" />\n                            )}\n                          </Flex>\n                        </StyledSortButton>\n                      </Th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {orderBy(traitValues, 'rarity', sortType).map(({ value, count, rarity }) => {\n                      return (\n                        <tr key={value}>\n                          <Td>{capitalize(value)}</Td>\n                          <Td textAlign=\"center\">{formatNumber(count, 0, 0)}</Td>\n                          <Td textAlign=\"center\">{`${formatNumber(rarity, 0, 2)}%`}</Td>\n                        </tr>\n                      )\n                    })}\n                  </tbody>\n                </Table>\n              </TableWrapper>\n            </CollapsibleCard>\n          )\n        })}\n    </>\n  )\n}\n\nexport default CollectionTraits\n","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport Container from 'components/Layout/Container'\nimport { useAppDispatch } from 'state'\nimport { useGetCollection } from 'state/nftMarket/hooks'\nimport { fetchCollection } from 'state/nftMarket/reducer'\nimport Header from '../Header'\nimport PancakeBunniesTraits from './PancakeBunniesTraits'\nimport { pancakeBunniesAddress } from '../../constants'\nimport CollectionTraits from './CollectionTraits'\n\nconst Traits = () => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const dispatch = useAppDispatch()\n  const collection = useGetCollection(collectionAddress)\n\n  useEffect(() => {\n    if (collectionAddress) {\n      dispatch(fetchCollection(collectionAddress))\n    }\n  }, [collectionAddress, dispatch])\n\n  return (\n    <>\n      <Header collection={collection} />\n      <Container py=\"40px\">\n        {collectionAddress === pancakeBunniesAddress ? (\n          <PancakeBunniesTraits collectionAddress={collectionAddress} />\n        ) : (\n          <CollectionTraits collectionAddress={collectionAddress} />\n        )}\n      </Container>\n    </>\n  )\n}\n\nexport default Traits\n","var baseTimes = require('./_baseTimes'),\n    castFunction = require('./_castFunction'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n","import React, { ChangeEvent, useState, useEffect } from 'react'\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport CircleLoader from 'components/Loader/CircleLoader'\n\nenum ResultStatus {\n  NOT_VALID,\n  FOUND,\n  NOT_FOUND,\n}\n\ninterface AddressInputSelectProps extends BoxProps {\n  onValidAddress?: (value: string) => Promise<boolean>\n  onAddressClick: (value: string) => void\n}\n\nconst SubMenu = styled.div<{ isOpen: boolean }>`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\n  left: 0;\n  padding-bottom: 8px;\n  padding-top: 16px;\n  position: absolute;\n  top: calc(100% - 12px);\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  width: 100%;\n  z-index: 15;\n\n  ${({ isOpen }) =>\n    isOpen &&\n    `\n    height: auto;\n    opacity: 1;\n    transform: scaleY(1);\n  `}\n`\n\nconst AddressLink = styled(Text)`\n  cursor: pointer;\n  overflow-wrap: break-word;\n  font-weight: bold;\n  padding-left: 16px;\n  padding-right: 16px;\n`\n\nconst initialState = {\n  isFetching: false,\n  resultFound: ResultStatus.NOT_VALID,\n  value: '',\n}\n\nconst defaultValidAddressHandler = () => Promise.resolve(true)\n\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\n  onValidAddress = defaultValidAddressHandler,\n  onAddressClick,\n  ...props\n}) => {\n  const [state, setState] = useState(initialState)\n  const { t } = useTranslation()\n  const { isFetching, resultFound, value } = state\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value: newValue } = evt.target\n    setState((prevState) => ({\n      ...prevState,\n      value: newValue,\n    }))\n  }\n\n  const handleClick = () => {\n    setState(initialState)\n    onAddressClick(state.value)\n  }\n\n  // When we have a valid address fetch the data\n  useEffect(() => {\n    const isValidAddress = isAddress(value) !== false\n\n    const validAddressHandler = async () => {\n      try {\n        setState((prevState) => ({ ...prevState, isFetching: true }))\n        const hasResults = await onValidAddress(value)\n\n        setState((prevState) => ({\n          ...prevState,\n          isFetching: false,\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\n        }))\n      } catch {\n        setState((prevState) => ({ ...prevState, isFetching: false }))\n      }\n    }\n\n    if (isValidAddress) {\n      validAddressHandler()\n    } else {\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\n    }\n  }, [value, onValidAddress, setState])\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Input\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\n        value={state.value}\n        onChange={handleChange}\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\n      />\n      {isFetching && (\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\n          <CircleLoader />\n        </Box>\n      )}\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\n        {resultFound === ResultStatus.FOUND ? (\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\n        ) : (\n          <Text px=\"16px\" fontWeight=\"bold\">\n            {t('No results found.')}\n          </Text>\n        )}\n      </SubMenu>\n    </Box>\n  )\n}\n\nexport default AddressInputSelect\n","import React from 'react'\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\nimport useTheme from 'hooks/useTheme'\n\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\n  const { theme } = useTheme()\n  const background = theme.isDark\n    ? 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)'\n    : 'linear-gradient(111.68deg, #f2ecf2 0%, #e8f2f6 100%)'\n  return <PageHeader background={background} {...props} />\n}\n\nexport default MarketPageHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\n\nexport interface StatBoxItemProps extends BoxProps {\n  title: string\n  stat: string\n}\n\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\n  <Box {...props}>\n    <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\n      {title}\n    </Text>\n    {stat === null ? (\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\n    ) : (\n      <Text fontWeight=\"600\" textAlign=\"center\">\n        {stat}\n      </Text>\n    )}\n  </Box>\n)\n\nconst StatBox = styled(Flex)`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.card};\n  justify-content: space-around;\n  padding: 8px;\n  width: 100%;\n`\n\nexport default StatBox\n","import React, { ReactElement } from 'react'\nimport {\n  Card,\n  BinanceIcon,\n  Box,\n  BoxProps,\n  CameraIcon,\n  Flex,\n  FlexProps,\n  SellIcon,\n  Text,\n  WalletFilledIcon,\n  Skeleton,\n} from '@pancakeswap/uikit'\nimport { Price } from 'golswap-sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport styled from 'styled-components'\n\nexport const Footer: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box borderTop={[null, null, null, '1px solid']} borderColor=\"cardBorder\" pt=\"8px\" {...props}>\n    {children}\n  </Box>\n)\n\ninterface BNBAmountLabelProps extends FlexProps {\n  amount: number\n}\n\nexport const BNBAmountLabel: React.FC<BNBAmountLabelProps> = ({ amount, ...props }) => (\n  <Flex alignItems=\"center\" {...props}>\n    <BinanceIcon width=\"16px\" mx=\"4px\" />\n    <Text fontWeight=\"600\">\n      {amount.toLocaleString(undefined, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 4,\n      })}\n    </Text>\n  </Flex>\n)\n\ninterface CostLabelProps extends FlexProps {\n  cost: number\n  bnbBusdPrice: Price\n}\n\nexport const CostLabel: React.FC<CostLabelProps> = ({ cost, bnbBusdPrice, ...props }) => {\n  const priceInUsd = multiplyPriceByAmount(bnbBusdPrice, cost)\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      {priceInUsd > 0 && (\n        <Text fontSize=\"12px\" color=\"textSubtle\">{`($${priceInUsd.toLocaleString(undefined, {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })})`}</Text>\n      )}\n      <BNBAmountLabel amount={cost} />\n    </Flex>\n  )\n}\n\ninterface MetaRowProps extends FlexProps {\n  title: string\n}\n\nexport const MetaRow: React.FC<MetaRowProps> = ({ title, children, ...props }) => (\n  <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n    <Text fontSize=\"12px\" color=\"textSubtle\" maxWidth=\"120px\" ellipsis title={title}>\n      {title}\n    </Text>\n    <Box>{children}</Box>\n  </Flex>\n)\n\nexport interface NftTagProps extends FlexProps {\n  icon?: ReactElement\n  color?: string\n}\n\nexport const NftTag: React.FC<NftTagProps> = ({ icon, color = 'text', children, ...props }) => (\n  <Flex display=\"inline-flex\" alignItems=\"center\" height=\"24px\" {...props}>\n    {icon}\n    <Text color={color} fontSize=\"14px\" fontWeight=\"600\">\n      {children}\n    </Text>\n  </Flex>\n)\n\nexport const ProfileNftTag: React.FC<NftTagProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <NftTag icon={<CameraIcon mr=\"4px\" width=\"16px\" color=\"textSubtle\" />} color=\"textSubtle\" {...props}>\n      {t('Profile')}\n    </NftTag>\n  )\n}\n\nexport const WalletNftTag: React.FC<NftTagProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <NftTag icon={<WalletFilledIcon mr=\"4px\" width=\"16px\" color=\"secondary\" />} color=\"secondary\" {...props}>\n      {t('Wallet')}\n    </NftTag>\n  )\n}\n\nexport const SellingNftTag: React.FC<NftTagProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <NftTag icon={<SellIcon mr=\"4px\" width=\"16px\" color=\"failure\" />} color=\"failure\" {...props}>\n      {t('Selling')}\n    </NftTag>\n  )\n}\n\nexport const StyledCollectibleCard = styled(Card)`\n  border-radius: 8px;\n  max-width: 320px;\n  transition: opacity 200ms;\n\n  & > div {\n    border-radius: 8px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    &:hover {\n      cursor: pointer;\n      opacity: 0.6;\n    }\n  }\n`\ninterface LowestPriceMetaRowProps {\n  lowestPrice: number\n  isFetching: boolean\n  bnbBusdPrice: Price\n}\n\nexport const LowestPriceMetaRow = ({ lowestPrice, isFetching, bnbBusdPrice }: LowestPriceMetaRowProps) => {\n  const { t } = useTranslation()\n\n  if (!isFetching && !lowestPrice) {\n    return null\n  }\n\n  return (\n    <MetaRow title={t('Lowest price')}>\n      {isFetching ? (\n        <Skeleton height=\"24px\" width=\"30px\" />\n      ) : (\n        <CostLabel cost={lowestPrice} bnbBusdPrice={bnbBusdPrice} />\n      )}\n    </MetaRow>\n  )\n}\n","import styled from 'styled-components'\n\ninterface AvatarImageProps {\n  src: string\n  borderColor?: string\n  alt?: string\n}\n\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\n  alt,\n}))<AvatarImageProps>`\n  background: url('${({ src }) => src}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 96px;\n  height: 96px;\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n\nexport default AvatarImage\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport AddressInputSelect from 'components/AddressInputSelect'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nconst SearchBar: React.FC = (props) => {\n  const history = useHistory()\n\n  const handleAddressClick = (value: string) => {\n    history.push(`${nftsBaseUrl}/profile/${value}`)\n  }\n\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\n}\n\nexport default SearchBar\n","import React, { ReactNode } from 'react'\nimport { Box, Grid, GridProps, Heading } from '@pancakeswap/uikit'\n\ninterface MarketPageTitleProps extends GridProps {\n  title: string\n  description?: ReactNode\n}\n\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\n    <Box>\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\n        {title}\n      </Heading>\n      {description}\n    </Box>\n    <Box>{children}</Box>\n  </Grid>\n)\n\nexport default MarketPageTitle\n","import { SubMenuItems } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseSubMenu = styled(SubMenuItems)`\n  background-color: transparent;\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\nexport default BaseSubMenu\n","var baseSum = require('./_baseSum'),\n    identity = require('./identity');\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */\nfunction sum(array) {\n  return (array && array.length)\n    ? baseSum(array, identity)\n    : 0;\n}\n\nmodule.exports = sum;\n","import styled from 'styled-components'\n\ninterface StyledBannerImageProps {\n  src: string\n  alt?: string\n}\n\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\n  alt,\n}))<StyledBannerImageProps>`\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\n  background-image: url('${({ src }) => src}');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 100%;\n  border-radius: 32px;\n  height: 123px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 192px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 256px;\n  }\n`\n\nexport default StyledBannerImage\n","import React, { ReactNode } from 'react'\nimport { Flex, Box, FlexProps } from '@pancakeswap/uikit'\nimport BannerImage from './BannerImage'\n\ninterface BannerHeaderProps extends FlexProps {\n  bannerImage: string\n  bannerAlt?: string\n  avatar?: ReactNode\n}\n\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\n  return (\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\n      <Box position=\"relative\" pb=\"56px\">\n        <BannerImage src={bannerImage} alt={bannerAlt} />\n        <Box position=\"absolute\" bottom={0} left={-4}>\n          <Flex alignItems=\"flex-end\">\n            {avatar}\n            {children}\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default BannerHeader\n","import { useEffect, useState } from 'react'\nimport { getNftsMarketData } from 'state/nftMarket/helpers'\nimport { NftToken } from 'state/nftMarket/types'\nimport { pancakeBunniesAddress } from '../constants'\n\nexport interface LowestNftPrice {\n  isFetching: boolean\n  lowestPrice: number\n}\n\nconst getBunnyIdFromNft = (nft: NftToken): string => {\n  const bunnyId = nft.attributes?.find((attr) => attr.traitType === 'bunnyId')?.value\n  return bunnyId ? bunnyId.toString() : null\n}\n\nexport const useGetLowestPriceFromBunnyId = (bunnyId: string): LowestNftPrice => {\n  const [isFetching, setIsFetching] = useState<boolean>(false)\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      try {\n        setIsFetching(true)\n        const response = await getNftsMarketData({ otherId: bunnyId, isTradable: true }, 1, 'currentAskPrice', 'asc')\n\n        if (response.length > 0) {\n          const [tokenMarketData] = response\n          setLowestPrice(parseFloat(tokenMarketData.currentAskPrice))\n        }\n      } finally {\n        setIsFetching(false)\n      }\n    }\n\n    if (bunnyId) {\n      fetchLowestPrice()\n    }\n  }, [bunnyId])\n\n  return { isFetching, lowestPrice }\n}\n\nexport const useGetLowestPriceFromNft = (nft: NftToken): LowestNftPrice => {\n  const [isFetching, setIsFetching] = useState<boolean>(false)\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n  const isPancakeBunny = nft.collectionAddress?.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      const bunnyIdAttr = getBunnyIdFromNft(nft)\n      try {\n        setIsFetching(true)\n        const response = await getNftsMarketData(\n          { otherId: bunnyIdAttr, isTradable: true },\n          1,\n          'currentAskPrice',\n          'asc',\n        )\n\n        if (response.length > 0) {\n          const [tokenMarketData] = response\n          setLowestPrice(parseFloat(tokenMarketData.currentAskPrice))\n        }\n      } finally {\n        setIsFetching(false)\n      }\n    }\n\n    if (isPancakeBunny && nft) {\n      fetchLowestPrice()\n    }\n  }, [isPancakeBunny, nft])\n\n  return { isFetching, lowestPrice }\n}\n","import { useEffect, useState } from 'react'\nimport { getCollectionDistributionApi } from 'state/nftMarket/helpers'\nimport { ApiCollectionDistribution, ApiCollectionDistributionPB } from 'state/nftMarket/types'\nimport { pancakeBunniesAddress } from '../constants'\n\ninterface State {\n  isFetching: boolean\n  data: ApiCollectionDistribution['data']\n}\n\nconst useGetCollectionDistribution = (collectionAddress: string) => {\n  const [state, setState] = useState<State>({ isFetching: false, data: null })\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      setState((prevState) => ({ ...prevState, isFetching: true }))\n      const apiResponse = await getCollectionDistributionApi<ApiCollectionDistribution>(collectionAddress)\n      setState({\n        isFetching: false,\n        data: apiResponse.data,\n      })\n    }\n\n    fetchTokens()\n  }, [collectionAddress, setState])\n\n  return state\n}\n\ninterface StatePB {\n  isFetching: boolean\n  data: ApiCollectionDistributionPB['data']\n}\n\nexport const useGetCollectionDistributionPB = () => {\n  const [state, setState] = useState<StatePB>({ isFetching: false, data: null })\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      setState((prevState) => ({ ...prevState, isFetching: true }))\n      const apiResponse = await getCollectionDistributionApi<ApiCollectionDistributionPB>(pancakeBunniesAddress)\n      setState({\n        isFetching: false,\n        data: apiResponse.data,\n      })\n    }\n\n    fetchTokens()\n  }, [setState])\n\n  return state\n}\n\nexport default useGetCollectionDistribution\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","import React from 'react'\nimport { Box, ChevronLeftIcon, Flex } from '@pancakeswap/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport SearchBar from '../components/SearchBar'\n\nconst BackLink = styled(RouterLink)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst TopBar: React.FC = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n      <BackLink to={nftsBaseUrl}>\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\n        {t('All Collections')}\n      </BackLink>\n      <Box>\n        <SearchBar />\n      </Box>\n    </Flex>\n  )\n}\n\nexport default TopBar\n","import React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\n\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\n  collectionAddress: string\n}\n\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\n      setLowestPrice(lowestCollectionPrice)\n    }\n\n    fetchLowestPrice()\n  }, [collectionAddress, setLowestPrice])\n\n  const formattedLowestPrice =\n    lowestPrice === null\n      ? null\n      : lowestPrice.toLocaleString(undefined, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })\n\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\n}\n\nexport default LowestPriceStatBoxItem\n","import React from 'react'\nimport { useLocation, useParams } from 'react-router'\nimport { Text } from '@pancakeswap/uikit'\nimport { Collection } from 'state/nftMarket/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport MarketPageTitle from '../components/MarketPageTitle'\nimport StatBox, { StatBoxItem } from '../components/StatBox'\nimport BannerHeader from '../components/BannerHeader'\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\nimport BaseSubMenu from '../components/BaseSubMenu'\nimport { nftsBaseUrl } from '../constants'\nimport TopBar from './TopBar'\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\n\ninterface HeaderProps {\n  collection: Collection\n}\n\nconst DEFAULT_TABS = '#items'\n\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\n  const { t } = useTranslation()\n  const { pathname, hash } = useLocation()\n\n  const volume = parseFloat(totalVolumeBNB).toLocaleString(undefined, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3,\n  })\n\n  const itemsConfig = [\n    {\n      label: t('Items'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\n    },\n    {\n      label: t('Traits'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\n    },\n  ]\n\n  return (\n    <>\n      <MarketPageHeader>\n        <TopBar />\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\n        <MarketPageTitle\n          title={collection.name}\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\n        >\n          <StatBox>\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\n            <StatBoxItem title={t('Items listed')} stat={formatNumber(Number(numberTokensListed), 0, 0)} />\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\n          </StatBox>\n        </MarketPageTitle>\n      </MarketPageHeader>\n      <Container>\n        <BaseSubMenu items={itemsConfig} activeItem={`${pathname}${hash || DEFAULT_TABS}`} mt=\"24px\" mb=\"8px\" />\n      </Container>\n    </>\n  )\n}\n\nexport default Header\n"],"sourceRoot":""}